version: '3.8'

services:
  # Prometheus - Collecte des métriques (PRODUCTION)
  prometheus:
    image: prom/prometheus:latest
    container_name: fck-prometheus-prod
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.prod.yml:/etc/prometheus/prometheus.yml
      - prometheus_data_prod:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - monitoring

  # Grafana - Visualisation des métriques (PRODUCTION)
  grafana:
    image: grafana/grafana:latest
    container_name: fck-grafana-prod
    restart: unless-stopped
    ports:
      - "3001:3000"
    volumes:
      - grafana_data_prod:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=fckmonitor123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_DOMAIN=fckmap.fr
      - GF_SERVER_ROOT_URL=https://fckmap.fr:3001
    networks:
      - monitoring
    depends_on:
      - prometheus

  # Node Exporter - Métriques système (PRODUCTION)
  node-exporter:
    image: prom/node-exporter:latest
    container_name: fck-node-exporter-prod
    restart: unless-stopped
    ports:
      - "9100:9100"
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - monitoring

networks:
  monitoring:
    driver: bridge

volumes:
  prometheus_data_prod:
  grafana_data_prod: